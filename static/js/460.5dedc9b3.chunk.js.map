{"version":3,"file":"static/js/460.5dedc9b3.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.js","components/MainComponent/MainComponent.jsx","components/Column/Column.styled.js","components/Tooltip/Tooltip.styled.js","components/Tooltip/Tooltip.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns/Columns.styled.js","components/ScreenPage/Columns/Columns.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext} from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n\nexport function MainComponent({ children }) {\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon/Icon.jsx';\n\nexport const Wrapper = styled.li`\n\twidth: 347px;\n\tmax-width: 100vw;\n\tdisplay: grid;\n\tgap: 8px;\n\tgrid-template-columns: 1fr;\n\tgrid-template-areas:\n\t\t'title'\n\t\t'task'\n\t\t'add';\n\tgrid-template-rows: 56px auto 56px;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 350px;\n\t}\n`;\n\nexport const Title = styled.span`\n\tcolor: ${props => props.theme.colum.textMain};\n\tfont-size: 18px;\n\tborder-radius: 8px;\n\tpadding: 14px 24px;\n\tbackground-color: ${props => props.theme.profile.background};\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tdisplay: flex;\n\theight: 58px;\n\talign-items: center;\n\tjustify-content: space-between;\n\tcursor: default;\n`;\n\nexport const List = styled.div`\n\tgrid-area: title;\n\twidth: 334px;\n\tmax-width: 98vw;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\toverflow-y: auto;\n`;\n\nexport const ListTasksContainer = styled.div`\n\twidth: 100%;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tmargin-bottom: 14px;\n\n\t&::-webkit-scrollbar {\n\t\twidth: 8px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\t\tborder-radius: 4px;\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\theight: 142px;\n\t\tbackground-color: rgba(18, 18, 18, 1);\n\t\tborder-radius: 4px;\n\t\tbox-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n\t}\n\t&::-webkit-scrollbar-thumb:hover {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonBackground};\n\t}\n`;\n\nexport const ListTasks = styled.div`\n\tgrid-area: task;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n`;\n\nexport const IconsContainer = styled.div`\n\tgrid-area: add;\n\tdisplay: flex;\n\tgap: 8px;\n\tmargin-left: auto;\n`;\n\nexport const EditColumn = styled(Icon)`\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\ttransition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const DelColumn = styled(Icon)`\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\ttransition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const battonStyle = {\n\twidth: '334px',\n\tmaxWidth: '98vw',\n};\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const TooltipContent = styled.div`\n  outline: none;\n  background: ${props => props.theme.popup.background};\n  min-width: 135px;\n  height: auto;\n  margin: 0 auto;\n  padding: 15px;\n  z-index: 1000;\n`;\n\nexport const TooltipButton = styled.button`\n  font-size: 12px;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  background-color: transparent;\n  color: ${props => props.theme.popup.textSecondary};\n  stroke: ${props => props.theme.popup.textSecondary};\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.popup.textAccent};\n    stroke: ${props => props.theme.popup.textAccent};\n  }\n`;\n\nexport const IconProcess = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: inherit;\n  }\n`;\n","/** @format */\n\nimport React from 'react';\nimport ModalWindow, { customStyles } from '../Modal';\nimport { TooltipButton, TooltipContent, IconProcess } from './Tooltip.styled';\nimport { useColumns } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateCard } from 'redux/cards/operations';\n\nconst Tooltip = ({ isOpen, onRequestClose, card }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\tconst { _id: id, columnId: oldColumnId, name } = card;\n\n\tconst handleClick = columnId => {\n\t\tdispatch(updateCard({ id, columnId, name, oldColumnId }));\n\t\tonRequestClose();\n\t};\n\n\treturn (\n\t\t<ModalWindow isOpen={isOpen} onRequestClose={onRequestClose} style={customStyles}>\n\t\t\t<TooltipContent>\n\t\t\t\t{allColumns?.map(col => (\n\t\t\t\t\t<React.Fragment key={col._id}>\n\t\t\t\t\t\t{oldColumnId !== col._id && (\n\t\t\t\t\t\t\t<TooltipButton onClick={() => handleClick(col._id)}>\n\t\t\t\t\t\t\t\t{col.name}\n\t\t\t\t\t\t\t\t<IconProcess name='process-task' />\n\t\t\t\t\t\t\t</TooltipButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t))}\n\t\t\t</TooltipContent>\n\t\t</ModalWindow>\n\t);\n};\n\nexport default Tooltip;\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.div`\n  width: 334px;\n  max-width: 95vw;\n  height: 154px;\n  display: flex;\n  flex-direction: row;\n  background-color: ${props => props.theme.profile.background};\n  border-radius: 7px;\n  overflow: hidden;\n`;\n\nexport const PriorityLine = styled.div`\n  width: 4px;\n`;\n\nexport const CardContent = styled.div`\n  width: 330px;\n  padding: 14px 20px 14px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const TextContent = styled.div``;\n\nexport const Title = styled.h4`\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.help.modalTextMain};\n  margin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  line-height: 1.45;\n  color: ${props => props.theme.colum.textSecondary};\n  margin-top: 8px;\n  width: 290px;\n  height: 38px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-top: solid 1px ${props => props.theme.colum.borderColor};\n  height: 45px;\n  align-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n  height: 31px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 8px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.colum.icon};\n`;\n\nexport const PriorityLevel = styled.p`\n  position: relative;\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colum.textMain};\n  padding-left: 16px;\n  cursor: default;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => props.color};\n  }\n`;\n\nexport const Dedline = styled.div`\n  height: 31px;\n  margin-left: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const Date = styled.p`\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.colum.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  stroke: ${props =>\n    props.active ? props.theme.colum.buttonBackground : 'transparent'};\n  cursor: pointer;\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 13px;\n  \n\n   &:hover,\n  &:focus {\n    stroke:  ${props => props.theme.colum.buttonBackground};\n`;\n\nexport const MoveIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.colum.buttonBackground};\n  }\n`;\n\nexport const EditIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.colum.buttonBackground};\n  }\n`;\n\nexport const DelIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.colum.buttonBackground};\n  }\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { GetColor } from 'components/Helpers';\nimport Tooltip from 'components/Tooltip';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n\tCardContainer,\n\tPriorityLine,\n\tCardContent,\n\tTextContent,\n\tTitle,\n\tDescriptionText,\n\tInfo,\n\tPriority,\n\tPriorityLevel,\n\tDedline,\n\tInfoTitle,\n\tDate,\n\tIconContainer,\n\tBellIcon,\n\tMoveIcon,\n\tEditIcon,\n\tDelIcon,\n} from './Card.styled';\nimport { useColumns } from 'hooks';\n\nexport const Card = ({ item, deleteCard, editCard }) => {\n\tconst { name, priority, deadline, text } = item;\n\tconst [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\tconst { allColumns } = useColumns();\n\n\tconst closeTooltip = () => {\n\t\tsetIsTooltipOpen(false);\n\t};\n\n\tconst deadLineString = deadline => {\n\t\tif (!deadline || typeof deadline !== 'number') return '--/--/--';\n\t\tconst date = moment(deadline);\n\t\treturn date.format('DD/MM/YYYY');\n\t};\n\n\tconst active = time => {\n\t\tif (!deadline) return 0;\n\t\treturn moment(time).date();\n\t};\n\n\tconst priorityLevel = GetColor(priority);\n\n\treturn (\n\t\t<>\n\t\t\t<StyleSheetManager shouldForwardProp={prop => prop !== 'active' && prop !== 'color'}>\n\t\t\t\t<CardContainer>\n\t\t\t\t\t<PriorityLine style={{ backgroundColor: priorityLevel.color }} />\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<TextContent>\n\t\t\t\t\t\t\t<Title>{name}</Title>\n\t\t\t\t\t\t\t<DescriptionText>{text}</DescriptionText>\n\t\t\t\t\t\t</TextContent>\n\t\t\t\t\t\t<Info>\n\t\t\t\t\t\t\t<Priority>\n\t\t\t\t\t\t\t\t<InfoTitle>Priority</InfoTitle>\n\t\t\t\t\t\t\t\t<PriorityLevel color={priorityLevel.color}>\n\t\t\t\t\t\t\t\t\t{priorityLevel.name}\n\t\t\t\t\t\t\t\t</PriorityLevel>\n\t\t\t\t\t\t\t</Priority>\n\t\t\t\t\t\t\t<Dedline>\n\t\t\t\t\t\t\t\t<InfoTitle>Deadline</InfoTitle>\n\t\t\t\t\t\t\t\t<Date>{deadLineString(deadline)}</Date>\n\t\t\t\t\t\t\t</Dedline>\n\t\t\t\t\t\t\t<BellIcon\n\t\t\t\t\t\t\t\tname='bell'\n\t\t\t\t\t\t\t\tactive={active(deadline) <= active(moment()) && deadline}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t\t<MoveIcon\n\t\t\t\t\t\t\t\t\tname='process-task'\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (allColumns.length > 1) setIsTooltipOpen(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<EditIcon name='edit' onClick={editCard} />\n\t\t\t\t\t\t\t\t<DelIcon name='delete' onClick={deleteCard} />\n\t\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tisOpen={isTooltipOpen}\n\t\t\t\t\t\t\t\tonRequestClose={closeTooltip}\n\t\t\t\t\t\t\t\tcard={item}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Info>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</CardContainer>\n\t\t\t</StyleSheetManager>\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport React, { useContext, useState, useEffect, useMemo } from 'react';\nimport {\n\tWrapper,\n\tTitle,\n\tIconsContainer,\n\tEditColumn,\n\tDelColumn,\n\tList,\n\tListTasks,\n\tListTasksContainer,\n} from './Column.styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\nimport { updateStateAfterDeleteColumn } from 'redux/cards/cardsSlice';\n\nimport {\n\tButton,\n\tButtonText,\n\tIconWrapper,\n\tAddIcon,\n} from 'components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\n\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\nimport { delColumn } from 'redux/columns/operations';\nimport { MainContext } from 'components/Helpers';\nimport { useCards, useCardEditing, useColumns } from 'hooks';\n\nexport const Column = ({ columnData }) => {\n\tconst { name, _id } = columnData;\n\tconst { isOpen, setIsOpen, cardForEditing, editCard, onRequestClose, deleteCard } =\n\t\tuseCardEditing();\n\tconst { allCards } = useCards();\n\tconst { statusColumn } = useColumns();\n\tconst dispatch = useDispatch();\n\tconst { filter, setIsOpenAddColumn, setColumnEdit } = useContext(MainContext);\n\tconst [cards, setCards] = useState([]);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCardsByColumnId(_id));\n\t}, [dispatch, _id]);\n\n\tconst handleDeleteColumn = columnId => {\n\t\tif (statusColumn) return;\n\t\tdispatch(delColumn(columnId)).then(() => {\n\t\t\tdispatch(updateStateAfterDeleteColumn({ id: columnId }));\n\t\t});\n\t};\n\n\tconst handleEditColumn = () => {\n\t\tif (statusColumn) return;\n\t\tsetIsOpenAddColumn(true);\n\t\tsetColumnEdit(columnData);\n\t};\n\n\tconst memoizedCards = useMemo(() => {\n\t\tif (_id && _id in allCards) {\n\t\t\tconst cardForColumn = allCards[_id]?.filter(card => {\n\t\t\t\tif (filter === 'all') {\n\t\t\t\t\treturn card.columnId === _id;\n\t\t\t\t} else {\n\t\t\t\t\treturn card.columnId === _id && card.priority === filter;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn cardForColumn;\n\t\t}\n\t\treturn [];\n\t}, [_id, allCards, filter]);\n\n\tuseEffect(() => {\n\t\tsetCards(memoizedCards);\n\t}, [memoizedCards]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<List>\n\t\t\t\t<Title>\n\t\t\t\t\t{name}\n\t\t\t\t\t<IconsContainer>\n\t\t\t\t\t\t<EditColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tname='edit'\n\t\t\t\t\t\t\tonClick={handleEditColumn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DelColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tonClick={() => handleDeleteColumn(_id)}\n\t\t\t\t\t\t\tname='delete'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</IconsContainer>\n\t\t\t\t</Title>\n\t\t\t</List>\n\t\t\t<ListTasksContainer>\n\t\t\t\t<ListTasks>\n\t\t\t\t\t{cards\n\t\t\t\t\t\t?.map(item => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\tdeleteCard={() => deleteCard({ id: item?._id, _id })}\n\t\t\t\t\t\t\t\teditCard={() => editCard(item)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t\t.reverse()}\n\t\t\t\t</ListTasks>\n\t\t\t</ListTasksContainer>\n\t\t\t<Button\n\t\t\t\tstyle={{ width: '334px', maxWidth: '95vw' }}\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t>\n\t\t\t\t<IconWrapper>\n\t\t\t\t\t<AddIcon name='add-board' />\n\t\t\t\t</IconWrapper>\n\t\t\t\t<ButtonText>{!cards?.length ? 'Add card' : 'Add another card'}</ButtonText>\n\t\t\t</Button>\n\t\t\t<AddCardModal\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={onRequestClose}\n\t\t\t\tcolumnId={_id}\n\t\t\t\tcardForEditing={cardForEditing}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","/** @format */\n\nimport styled from '@emotion/styled';\n\nexport const Styled = styled.ul`\n\tdisplay: flex;\n\tgap: 20px;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const List = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\theight: calc(100vh - 318px);\n\toverflow-y: auto;\n`;\n","/** @format */\n\nimport React, { useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { Column } from 'components/Column';\nimport { Styled } from './Columns.styled';\nimport { useBoards, useColumns } from 'hooks';\n\nexport const Columns = ({ board, children }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\tconst { statusLoading } = useBoards();\n\n\tuseEffect(() => {\n\t\tif (!statusLoading) dispatch(fetchColumnsByIdBoards(board));\n\t}, [dispatch, board, statusLoading]);\n\n\tconst memoizedColumns = useMemo(() => allColumns, [allColumns]);\n\n\treturn (\n\t\t<Styled>\n\t\t\t{memoizedColumns.length > 0 &&\n\t\t\t\tmemoizedColumns.map(item => <Column columnData={item} key={item._id} />)}\n\t\t\t{children}\n\t\t</Styled>\n\t);\n};\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n  padding: 0px 24px;\n  font-weight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  padding: 0;\n  margin: 0;\n  color: ${props => props.theme.help.modalTextMain};\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  cursor: default;\n`;\n","/** @format */\n\nimport { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n\treturn (\n\t\t<HeaderDashboardContainer>\n\t\t\t<Title>{title}</Title>\n\t\t</HeaderDashboardContainer>\n\t);\n};\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const WrapperBoardContainer = styled.div`\n\tpadding-left: 20px;\n\tpadding-right: 8px;\n\tdisplay: flex;\n\tflex-grow: 1;\n\toverflow-y: hidden;\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 0px 24px;\n\t}\n`;\n\nexport const BoardContainer = styled.div`\n\tdisplay: flex;\n\tflex-grow: 1;\n\toverflow-x: auto;\n\tdisplay: flex;\n\tgap: 20px;\n\tpadding-bottom: 36px;\n\n\t&::-webkit-scrollbar {\n\t\theight: 12px;\n\t\tbackground: rgba(18, 18, 18, 1);\n\t\tborder-radius: 6px;\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\theight: 100%;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t\tborder-radius: 6px;\n\t\tbox-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n\t}\n\t&::-webkit-scrollbar-thumb:hover {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonBackground};\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding-bottom: 64px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tpadding-bottom: 28px;\n\t}\n`;\n\nexport const BtnAddColumn = styled.button`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 15px 58px;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tborder-radius: 8px;\n\twidth: 334px;\n\toutline: none;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tbackground-color: ${props => props.theme.profile.background};\n\n\tborder: none;\n\tcursor: pointer;\n\theight: 58px;\n`;\n\nexport const StyledIconAdd = styled.span`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 28px;\n\theight: 28px;\n\tmargin-right: 8px;\n\tbackground-color: ${props => props.theme.addcolum.plusBackground};\n\tborder-radius: 6px;\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonHover};\n\t}\n`;\n\nexport const SvagAddColumn = styled(Icon)`\n\tstroke: ${props => props.theme.addcolum.plusColor};\n\twidth: 14px;\n\theight: 14px;\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n\tBoardContainer,\n\tBtnAddColumn,\n\tSvagAddColumn,\n\tStyledIconAdd,\n\tWrapperBoardContainer,\n} from './MainDashboard.styled';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from 'components/ScreenPage';\nimport { useParams } from 'react-router-dom';\nimport { MainContext } from 'components/Helpers';\nimport { useColumns, useBoards } from 'hooks';\n\nexport const MainDashboard = () => {\n\tconst { setIsOpenAddColumn } = useContext(MainContext);\n\tconst { board } = useParams();\n\tconst { allColumns } = useColumns();\n\tconst { allBoards } = useBoards();\n\tconst selectedBoard = allBoards.find(item => item._id === board);\n\n\treturn (\n\t\t<StyleSheetManager shouldForwardProp={prop => prop !== 'backgroundId'}>\n\t\t\t<WrapperBoardContainer>\n\t\t\t\t<BoardContainer backgroundId={selectedBoard?.background}>\n\t\t\t\t\t<Columns board={board}>\n\t\t\t\t\t\t<BtnAddColumn type='button' onClick={() => setIsOpenAddColumn(true)}>\n\t\t\t\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t\t\t\t<SvagAddColumn name='plus' />\n\t\t\t\t\t\t\t</StyledIconAdd>\n\t\t\t\t\t\t\t<span>Add {allColumns.length ? 'another' : null} column</span>\n\t\t\t\t\t\t</BtnAddColumn>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<AddColumnModal board={board} />\n\t\t\t\t</BoardContainer>\n\t\t\t</WrapperBoardContainer>\n\t\t</StyleSheetManager>\n\t);\n};\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport { HeaderDashboard, MainDashboard } from 'components/ScreenPage';\nimport { SayNameBoard } from 'components/Helpers';\nimport { fetchAllBoards } from 'redux/boards/operations';\nimport { useBoards } from 'hooks';\nimport { MainContext } from 'components/Helpers';\nimport { setActiveBoard } from 'redux/boards/boardsSlice';\n\nfunction MainTodosPage() {\n\tconst dispatch = useDispatch();\n\tconst { board } = useParams();\n\tconst navigate = useNavigate();\n\tconst nameBoard = SayNameBoard(board);\n\tconst { allBoards, activeBoard } = useBoards();\n\tconst [firstRun, setFirstRun] = useState(true);\n\tconst { deleted, setDeleted } = useContext(MainContext);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllBoards());\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif (firstRun && allBoards.length > 0) {\n\t\t\tif (!activeBoard) {\n\t\t\t\tnavigate(`/todos/${allBoards[0]?._id}`);\n\t\t\t} else {\n\t\t\t\tnavigate(`/todos/${activeBoard}`);\n\t\t\t}\n\t\t\tsetFirstRun(false);\n\t\t}\n\t}, [firstRun, allBoards, navigate, activeBoard]);\n\n\tuseEffect(() => {\n\t\tif (allBoards.length === 0) {\n\t\t\tnavigate('/todos');\n\t\t\tdispatch(setActiveBoard(''));\n\t\t}\n\t}, [allBoards, dispatch, navigate]);\n\n\tuseEffect(() => {\n\t\tif (!deleted) return;\n\t\tif (!allBoards[0]?._id) {\n\t\t\tnavigate(`/todos`);\n\t\t} else {\n\t\t\tnavigate(`/todos/${allBoards[0]._id}`);\n\t\t}\n\t\tsetDeleted(false);\n\t}, [allBoards, board, deleted, navigate, setDeleted]);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","Wrapper","li","Title","colum","textMain","profile","background","help","modalTextMain","List","div","_templateObject3","ListTasksContainer","_templateObject4","sidebar","addButtonBackground","ListTasks","_templateObject5","IconsContainer","_templateObject6","EditColumn","Icon","_templateObject7","icon","buttonBackground","DelColumn","_templateObject8","TooltipContent","TooltipButton","button","IconProcess","isOpen","onRequestClose","card","dispatch","useDispatch","allColumns","useColumns","_id","id","columnId","oldColumnId","name","ModalWindow","style","customStyles","map","col","React","handleClick","updateCard","CardContainer","PriorityLine","CardContent","TextContent","h4","DescriptionText","Info","borderColor","Priority","InfoTitle","_templateObject9","PriorityLevel","_templateObject10","color","Dedline","_templateObject11","Date","_templateObject12","BellIcon","_templateObject13","active","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","Card","item","deleteCard","editCard","priority","deadline","text","isTooltipOpen","setIsTooltipOpen","useState","time","moment","date","priorityLevel","GetColor","StyleSheetManager","shouldForwardProp","prop","backgroundColor","format","deadLineString","length","Tooltip","closeTooltip","Column","columnData","setIsOpen","cardForEditing","useCardEditing","allCards","useCards","statusColumn","filter","setIsOpenAddColumn","setColumnEdit","cards","setCards","useEffect","fetchCardsByColumnId","memoizedCards","useMemo","_allCards$_id","type","width","height","handleEditColumn","handleDeleteColumn","delColumn","then","updateStateAfterDeleteColumn","reverse","Button","maxWidth","IconWrapper","AddIcon","ButtonText","AddCardModal","Styled","ul","Columns","board","statusLoading","useBoards","fetchColumnsByIdBoards","memoizedColumns","HeaderDashboardContainer","h3","HeaderDashboard","title","WrapperBoardContainer","BoardContainer","BtnAddColumn","StyledIconAdd","addcolum","plusBackground","addButtonHover","SvagAddColumn","plusColor","MainDashboard","useParams","allBoards","selectedBoard","find","backgroundId","AddColumnModal","navigate","useNavigate","nameBoard","SayNameBoard","activeBoard","firstRun","setFirstRun","deleted","setDeleted","fetchAllBoards","_allBoards$","concat","setActiveBoard","_allBoards$2","FilterBtn"],"sourceRoot":""}